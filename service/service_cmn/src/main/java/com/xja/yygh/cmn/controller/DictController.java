package com.xja.yygh.cmn.controller;import com.xja.yygh.cmn.service.DictService;import com.xja.yygh.common.result.Result;import com.xja.yygh.model.cmn.Dict;import io.swagger.annotations.Api;import io.swagger.annotations.ApiOperation;import io.swagger.annotations.ApiParam;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.web.bind.annotation.*;import org.springframework.web.multipart.MultipartFile;import javax.servlet.http.HttpServletResponse;import java.util.List;/** * @Author xiaoYan * @Data 2022/12/4 11:35 * 时间不早了  注意休息 */@Api(description = "数据字典接口")@RestController@RequestMapping("/admin/cmn/dict")public class DictController {    @Autowired    private DictService dictService;    //根据数据id查询子数据列表    @ApiOperation(value = "根据数据id查询子数据列表")    @GetMapping("findChildData/{id}")    public Result findChildData(@PathVariable Long id) {        List<Dict> list = dictService.findChlidData(id);        System.out.println("list = " + list);        return Result.ok(list);    }    @ApiOperation(value = "根据dictCode获取下级节点")    @GetMapping(value = "/findByDictCode/{dictCode}")    public Result<List<Dict>> findByDictCode(            @ApiParam(name = "dictCode", value = "节点编码", required = true)            @PathVariable String dictCode) {        List<Dict> list = dictService.findByDictCode(dictCode);        return Result.ok(list);    }    @ApiOperation(value="导出")    @GetMapping(value = "/exportData")    public void exportData(HttpServletResponse response) {        dictService.exportData(response);    }    @ApiOperation(value = "导入")    @PostMapping("importData")    public Result importData(MultipartFile file) {        dictService.importDictData(file);        return Result.ok();    }    /**    * @return    * @author xiaoYan    * @params    * @date 2022/12/14 20:18     * 根据dictcode 和value查询 字典名称    */    @ApiOperation(value = "获取数据字典名称")    @GetMapping("getName/{dictCode}/{value}")    public String getName(            @PathVariable String dictCode,            @PathVariable String value                                                ) {        return dictService.getNameByParentDictCodeAndValue(dictCode, value);    }    @ApiOperation(value = "获取数据字典名称")    @GetMapping(value = "/getName/{value}")    public String getName(            @PathVariable("value") String value) {        return dictService.getNameByParentDictCodeAndValue("", value);    }}