package com.xja.yygh.order.api;import com.baomidou.mybatisplus.core.metadata.IPage;import com.baomidou.mybatisplus.extension.plugins.pagination.Page;import com.xja.yygh.common.result.Result;import com.xja.yygh.common.utils.AuthContextHolder;import com.xja.yygh.enums.OrderStatusEnum;import com.xja.yygh.model.order.OrderInfo;import com.xja.yygh.order.service.OrderService;import com.xja.yygh.vo.order.OrderCountQueryVo;import com.xja.yygh.vo.order.OrderQueryVo;import io.swagger.annotations.Api;import io.swagger.annotations.ApiOperation;import io.swagger.annotations.ApiParam;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.web.bind.annotation.*;import javax.servlet.http.HttpServletRequest;import java.util.Map;/** * @Author xiaoYan * @Data 2022/12/22 15:08 * 时间不早了  注意休息 */@Api(tags = "订单接口")@RestController@RequestMapping("/api/order/orderInfo")public class OrderApiController {    @Autowired    private OrderService orderService;    @ApiOperation(value = "创建订单")    @PostMapping("auth/submitOrder/{scheduleId}/{patientId}")    public Result submitOrder(            @ApiParam(name = "scheduleId", value = "排班id", required = true)            @PathVariable String scheduleId,            @ApiParam(name = "patientId", value = "就诊人id", required = true)            @PathVariable Long patientId) {        System.out.println(scheduleId);        System.out.println(patientId);        return Result.ok(orderService.saveOrder(scheduleId, patientId));    }    //根据订单id查询订单详情    @GetMapping("auth/getOrders/{orderId}")    public Result getOrders(@PathVariable Long orderId) {        OrderInfo orderInfo = orderService.getOrderInfo(orderId);        return Result.ok(orderInfo);    }    //订单列表（条件查询带分页）    @GetMapping("auth/{page}/{limit}")    public Result list(@PathVariable Long page,                       @PathVariable Long limit,                       OrderQueryVo orderQueryVo, HttpServletRequest request) {        //设置当前用户id        orderQueryVo.setUserId(AuthContextHolder.getUserId(request));        Page<OrderInfo> pageParam = new Page<>(page,limit);        IPage<OrderInfo> pageModel =                orderService.selectPage(pageParam,orderQueryVo);        return Result.ok(pageModel);    }    @ApiOperation(value = "获取订单状态")    @GetMapping("auth/getStatusList")    public Result getStatusList() {        return Result.ok(OrderStatusEnum.getStatusList());    }    @ApiOperation(value = "取消预约")    @PostMapping("auth/cancelOrder/{id}")    public Result cancelOrder(@PathVariable Long id) {        return Result.ok(orderService.cancelOrder( id));    }    @ApiOperation(value = "获取订单统计数据")    @PostMapping("inner/getCountMap")    public Map<String, Object> getCountMap(@RequestBody OrderCountQueryVo orderCountQueryVo) {        System.out.println(orderService.getCountMap(orderCountQueryVo));        return orderService.getCountMap(orderCountQueryVo);    }}