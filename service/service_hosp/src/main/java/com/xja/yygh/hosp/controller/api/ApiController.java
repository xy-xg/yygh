package com.xja.yygh.hosp.controller.api;import com.xja.yygh.common.helper.HttpRequestHelper;import com.xja.yygh.common.result.Result;import com.xja.yygh.hosp.service.DepartmentService;import com.xja.yygh.hosp.service.HospitalService;import com.xja.yygh.hosp.service.HospitalSetService;import com.xja.yygh.hosp.service.ScheduleService;import com.xja.yygh.model.hosp.Department;import com.xja.yygh.model.hosp.Hospital;import com.xja.yygh.model.hosp.Schedule;import com.xja.yygh.vo.hosp.DepartmentQueryVo;import com.xja.yygh.vo.hosp.ScheduleQueryVo;import io.swagger.annotations.ApiOperation;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.data.domain.Page;import org.springframework.util.StringUtils;import org.springframework.web.bind.annotation.PostMapping;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RestController;import javax.servlet.http.HttpServletRequest;import java.util.Map;/** * @Author xiaoYan * @Data 2022/12/10 11:43 * 时间不早了  注意休息 */@RestController@RequestMapping("/api/hosp")public class ApiController {    @Autowired    private HospitalService hospitalService;    @Autowired    private HospitalSetService hospitalSetService;    @Autowired    private DepartmentService departmentService;    @Autowired    private ScheduleService scheduleService;    /**    * @return    * @author xiaoYan    * @params    * @date 2022/12/10 17:28     * 上传医院接口    */    @ApiOperation(value = "保存医院")    @PostMapping("saveHospital")    public Result saveHosp (HttpServletRequest request){        //获取传递过来的医院信息        Map<String, Object> paramMap = ApiTool.getParameterMapDispose(request);        //保存失败 or 抛出异常        String s = ApiTool.existHosp(paramMap, hospitalSetService);        //传输过程中 "+"换成了 “”  因此我们要转换回来        String logoData = (String) paramMap.get("logoData");        logoData= logoData.replaceAll(" ", "+");        paramMap.put("logoData",logoData);        //调用方法        hospitalService.save(paramMap);        return Result.ok();    }    /**    * @return    * @author xiaoYan    * @params    * @date 2022/12/10 17:28    */    @ApiOperation(value = "查看医院")    @PostMapping("hospital/show")    public Result getHospital (HttpServletRequest request){        //获取传递过来的医院信息        Map<String, Object> paramMap = ApiTool.getParameterMapDispose(request);        //保存失败 or 抛出异常        String hosted =  ApiTool.existHosp(paramMap, hospitalSetService);        Hospital hospital = hospitalService.getByHoscode(hosted);        return Result.ok(hospital);    }    /**    * @return    * @author xiaoYan    * @params    * @date 2022/12/11 12:13    */    @ApiOperation(value = "保存科室")    @PostMapping("saveDepartment")    public Result saveDepartment (HttpServletRequest request){        //获取传递过来的医院信息        Map<String, Object> parameterMapDispose = ApiTool.getParameterMapDispose(request);        ApiTool.existHosp(parameterMapDispose, hospitalSetService);        //调用方法        departmentService.save(parameterMapDispose);        return Result.ok();    }    @ApiOperation(value = "查询所有科室")    @PostMapping("department/list")    public Result getDepartment (HttpServletRequest request){        //获取传递过来的医院信息        Map<String, Object> paramMap = ApiTool.getParameterMapDispose(request);        //保存失败 or 抛出异常        //医院编号        String hospcode =  ApiTool.existHosp(paramMap, hospitalSetService);        int page = StringUtils.isEmpty(paramMap.get("page")) ? 1 : Integer.parseInt((String) paramMap.get("page"));        int limit = StringUtils.isEmpty(paramMap.get("limit")) ? 1 : Integer.parseInt((String) paramMap.get("limit"));        DepartmentQueryVo departmentQueryVo = new DepartmentQueryVo();        departmentQueryVo.setHoscode(hospcode);        Page<Department> pageDepartment = departmentService.findPageDepartment(page,limit,departmentQueryVo);        return Result.ok(pageDepartment);    }    @ApiOperation(value = "删除科室")    @PostMapping("department/remove")    public Result removeDepartment(HttpServletRequest request) {        Map<String, Object> paramMap = HttpRequestHelper.switchMap(request.getParameterMap());//必须参数校验 略        String hoscode = ApiTool.existHosp(paramMap, hospitalSetService);//必填        String depcode = (String)paramMap.get("depcode");        departmentService.remove(hoscode, depcode);        return Result.ok();    }    /**    * @return    * @author xiaoYan    * @params    * @date 2022/12/11 19:23     * 上传排班    */    @ApiOperation(value = "上传排班")    @PostMapping("saveSchedule")    public Result saveSchedule(HttpServletRequest request) {        Map<String, Object> paramMap = HttpRequestHelper.switchMap(request.getParameterMap());        ApiTool.existHosp(paramMap, hospitalSetService);        scheduleService.save(paramMap);        return Result.ok();    }    @ApiOperation(value = "查询所有排班")    @PostMapping("schedule/list")    public Result getSchedule (HttpServletRequest request){        //获取传递过来的医院信息        Map<String, Object> paramMap = ApiTool.getParameterMapDispose(request);        //保存失败 or 抛出异常        //医院编号 如果不失败 那么 其余属性可以直接从json 获取        String hoscode =  ApiTool.existHosp(paramMap, hospitalSetService);        String depcode = (String)paramMap.get("depcode");        int page = StringUtils.isEmpty(paramMap.get("page")) ? 1 : Integer.parseInt((String) paramMap.get("page"));        int limit = StringUtils.isEmpty(paramMap.get("limit")) ? 1 : Integer.parseInt((String) paramMap.get("limit"));        ScheduleQueryVo scheduleQueryVo = new ScheduleQueryVo();        scheduleQueryVo.setHoscode(hoscode);        scheduleQueryVo.setDepcode(depcode);        Page<Schedule> pageModel = scheduleService.selectPage(page , limit, scheduleQueryVo);        return Result.ok(pageModel);    }    @ApiOperation(value = "删除排班")    @PostMapping("schedule/remove")    public Result removeSchedule(HttpServletRequest request) {        Map<String, Object> paramMap = HttpRequestHelper.switchMap(request.getParameterMap());//必须参数校验 略        String hoscode = ApiTool.existHosp(paramMap, hospitalSetService);//必填        String hosScheduleId = (String)paramMap.get("hosScheduleId");        departmentService.remove(hoscode, hosScheduleId);        return Result.ok();    }}